-Use to represent hierarchy unline Array, ArrayList, Stack, Queue, Deque( they all are sequentials), tree non linear.
-Its recursive(has many trees inside it/subtree)

Descendants : All the nodes that lie in this subtree with this particular node as root
Degree of a node : Number of children it has(degree of leaf node : 0)
Internal Node : Node with degree !=0


Application of Trees
    - Organization Structure
    - Folder Structure
    - XML/HTML Content(JSON CONTENTS)
    - In OOPS(Inheritance)

-Binary Search Trees
-Binary Heap(A Binary Heap is either Min Heap or Max Heap) -> Used to represent Priority Queue
- B and B+ Trees --> used for indexing <-- or use hashing 
    Common is B and B+ Trees
- Computer Networks : Spanning(Used by Bridges) and shortest path tree(Used by routers)
- Parse Tree : Used by compiler to parse source code
- Trie : Used to represent dictionaries(The pattern matching can be done efficiently using tries.)
- Suffix Tree : Pattern Searching
- Binary Index Tree : for range query searchs
- Segment Tree : : for range query searchs 

Segment Tree is more powerful but Binary Index Tree is faster for limited set of operations

------------------------------------------------------------------------------------------------------------------------

Binary Tree : Tree where every node has atmost two childrens

Normally trees are represent as linked structure. But there are some trees represent with array strcture like binary head and segmenet trees


------------------------------------------------------------------------------------------------------------------------

TRAVERSAL

    - Breadth First (Level order traversal)(Queue)
    - Depth First (Recursion)
        - Inoder
        - Preorder
        - Postorder

-------
ArrayDeque does not allow null elements to be added to the queue. When you attempt to add null to an ArrayDeque, it throws a NullPointerException. This behavior is different from LinkedList, which allows null elements.