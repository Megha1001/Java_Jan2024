Sorting in Java
-----------------------
In two classes
- Arrays -> normal arrays
    - Arrays of primitive(int, char etc)
        -> Stability doesn't matter and we can use non stable algo like Dual Pivot Quick Sort
    - Arrays of Objects (String , Integer, Students etc)
     -> Stability matters and we should use stable algo like Based on Merge sort adaption of TimSort
    -> subarray sorting present

- Collections --> for collections that implements List interface (ArrayList, LinkedList, Vector)
    -> Stability matters and we should use stable algo like Based on Merge sort adaption of TimSort
    ->subsorting not present

- Comparable, Comparator
    Fact : If result is +ve , swap


Stable Algos
-------------
IBM (Insertion sort, Bubble sort, Merge sort) -> stable
SQH(Selection sort, Quick sort, Heap sort) -> unstable


Selection Sort
----------------
- O(N^2) Algorithm
- Does less memory wirtes compared to QuickSort, MergeSort and Insertion Sort etc. But Cycle sort is optimal in terms of memory writes.
- Basic idea of heap sort
- Not stable
- In place


Insertion Sort
----------------
- O(N^2) worst case
- Inplace and stable
- Used in practice for small arrays
    - TimSort : (TIM) = Insertion Sort + Merge Sort
    - IntroSort : (Quick Intro Of Heap) = HeapSort + QuickSort + InsertionSort